
Docker File creation session notes:
------------------------------------
https://www.docker.com/products/docker-desktop/

Step 1: Running a Java Program in a Docker Container
    1.1. Pull Java Image
        Use the following command to pull the latest OpenJDK Docker image:
        docker pull openjdk:latest
    1.2. Create a Java Program
        Create a file HelloWorld.java with the following content:

        public class HelloWorld {
            public static void main(String[] args) {
                System.out.println("Hello from Docker!");
            }
        }
    1.3. Compile Java Code
        Compile the Java code using the OpenJDK container:

        docker run --rm -v "D:\Tutions\projects\docker-training\java-sample:/app" -w /app openjdk:latest javac HelloWorld.java
        ✅ Options Explanation:

        --rm – Removes the container after it finishes.

        -v "$(pwd)":/app – Mounts the current directory to /app inside the container.

        -w /app – Sets /app as the working directory inside the container.

        Any subsequent commands (like javac, java, etc.) will run relative to /app.

     1.4. Run Java Code
        Execute the compiled Java program using Docker:

        docker run --rm -v "D:\Tutions\projects\docker-training\java-sample:/app" -w /app openjdk:latest java HelloWorld
        Step 2: Create a Dockerfile for Java Program
        2.1. Create Dockerfile and Java File in the Same Directory
        Create a Dockerfile with the following content:

        dockerfile
--------------------------------------------------
        # Use the official OpenJDK image
        FROM openjdk:latest

        # Set the working directory
        WORKDIR /app

        # Copy all Java files into the container
        COPY . /app

        # Compile the Java program
        RUN javac HelloWorld.java

        # Command to run the Java program
        CMD ["java", "HelloWorld"]
------------------------------------------------
        2.2. Build Docker Image
            Build the Docker image:

            docker build -t java-app .
            ✅ Explanation:

            . – Defines the build context (folder where Docker looks for the Dockerfile and referenced files).

            RUN – Executes at build time to set up the container environment, install dependencies, compile code, etc.

            CMD – Executes at runtime when you start the container.

        2.3. Run Docker Container
            Run the container:

        docker run --rm java-app
        Step 3: Dockerfile in Root, Source Code in Another Directory
        3.1. Update Dockerfile
        If the Dockerfile is in the root directory and the source code is in another directory (e.g., java-sample), update the COPY command like this:

        dockerfile
        # Copy all Java files into the container
        COPY java-sample /app